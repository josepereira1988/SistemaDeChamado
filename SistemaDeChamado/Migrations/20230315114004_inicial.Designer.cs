// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeChamado.Context;

#nullable disable

namespace SistemaDeChamado.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230315114004_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SistemaDeChamado.Entity.Chamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Abertura")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CurtaDescricao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("Finalizado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StatusChamadoId")
                        .HasColumnType("int");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("StatusChamadoId");

                    b.HasIndex("TecnicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Chamados");
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.ChamadoLinhas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChamadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<TimeOnly>("Fim")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("Inicio")
                        .HasColumnType("time(6)");

                    b.Property<int>("StatusChamadoId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Tempo")
                        .HasColumnType("time(6)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChamadoId");

                    b.HasIndex("StatusChamadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ChamadoLinhas");
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("HorasContrato")
                        .HasColumnType("int");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.StatusChamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StatusChamado");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Aberto"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Aguardando Atendimento"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Em Andamento"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Aguardando Cliente"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Aguardando Terceiros"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Finalizado"
                        });
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.Property<bool>("ClienteMaster")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("clienteId")
                        .HasColumnType("int");

                    b.Property<string>("idSistema")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("clienteId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Classificacao = 0,
                            ClienteMaster = false,
                            Email = "jose.junior@ajcinformatica.com.br",
                            Nome = "AJC Informatica",
                            Senha = "TTJaRGFUWm9XazVxYkRCSllrQm1QVDA5UFQxTlZFbDY=",
                            Usuario = "Manager",
                            idSistema = "3fCi6hZNjl0Ib@f"
                        });
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.Chamado", b =>
                {
                    b.HasOne("SistemaDeChamado.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaDeChamado.Entity.StatusChamado", "StatusChamado")
                        .WithMany()
                        .HasForeignKey("StatusChamadoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaDeChamado.Entity.Usuarios", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaDeChamado.Entity.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Cliente");

                    b.Navigation("StatusChamado");

                    b.Navigation("Tecnico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.ChamadoLinhas", b =>
                {
                    b.HasOne("SistemaDeChamado.Entity.Chamado", "Chamado")
                        .WithMany("ChamadoLinhas")
                        .HasForeignKey("ChamadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeChamado.Entity.StatusChamado", "StatusChamado")
                        .WithMany()
                        .HasForeignKey("StatusChamadoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SistemaDeChamado.Entity.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Chamado");

                    b.Navigation("StatusChamado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.Usuarios", b =>
                {
                    b.HasOne("SistemaDeChamado.Entity.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("SistemaDeChamado.Entity.Chamado", b =>
                {
                    b.Navigation("ChamadoLinhas");
                });
#pragma warning restore 612, 618
        }
    }
}
